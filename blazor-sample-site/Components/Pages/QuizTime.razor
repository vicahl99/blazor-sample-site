@page "/quiz"
@using blazor_sample_site.Components.Shared
@using blazor_sample_site.Models
@using blazor_sample_site.Services
@inject IQuizService QuizService
@inject NavigationManager Navigation
@inject IDialogService DialogService
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h3>Quiz</h3>

@if (loading)
{
    <p>Laddar frågor...</p>
}
else if (showDialog)
{
    <p>Quiz finished!</p>
}
else if (currentQuestion != null && currentQuestion.Options != null && currentQuestion.Options.Count > 0)
{
    <p>@currentQuestion.Text</p>

    @for (var i = 0; i < currentQuestion.Options.Count; i++)
    {
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="() => SubmitAnswer(i)">
            @currentQuestion.Options[i]
        </MudButton>
    }
}
else
{
    <p>No question available.</p>
}

@code {
    private Question? currentQuestion;
    private bool loading = true;
    private bool showDialog;

    protected override async Task OnInitializedAsync()
    {
        await QuizService.LoadQuestionsAsync();
        currentQuestion = QuizService.GetCurrentQuestion();
        loading = false;
    }

    private void SubmitAnswer(int selectedIndex)
    {
        QuizService.SubmitAnswer(selectedIndex);

        if (QuizService.HasNextQuestion())
        {
            QuizService.NextQuestion();
            currentQuestion = QuizService.GetCurrentQuestion();
        }
        else
        {
            showDialog = true;
            OpenDialogAsync();
        }

        StateHasChanged();
    }

     private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<PopupupModal>("Simple Dialog", options);
    }

}